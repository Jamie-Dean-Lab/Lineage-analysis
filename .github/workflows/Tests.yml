name: Tests

on:
  push:
    branches: "main"
    tags: ["*"]
  pull_request:
  release:

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: always.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    timeout-minutes: 60
    name: Julia ${{ matrix.julia-version }} - ${{ matrix.os }} - ${{ matrix.julia-arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        julia-version:
          - "1"
        os:
          - ubuntu-latest
          # - macos-latest
          # - windows-latest
        julia-arch:
          - x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.julia-arch }}
      - uses: julia-actions/cache@v2
      - name: Install dependencies
        shell: julia --color=yes --project=. {0}
        run: |
          using Pkg
          Pkg.instantiate()
      - name: Run simple simulation
        shell: julia --color=yes --project=. {0}
        run: |
          include(joinpath(pwd(), "controlgetlineageABCdynamics.jl"))
          controlgetlineageABCdynamics(;
              model=UInt64(11),
              timeunit=4.0/60,
              nochains=UInt(2),
              MCmax=UInt(30),
              subsample=UInt(2),
              nomothersamples=UInt(300),
              nomotherburnin=UInt(5),
              nolevels=UInt(3),
              notreeparticles=UInt(100)
          )
        env:
          JULIA_NUM_THREADS: 4
